[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Oracle Corporation Java 22.0.1)
[debug] Load.defaultLoad until apply took 166.773263ms
[debug]           Load.loadUnit: plugins took 105.772568ms
[debug]           Load.loadUnit: defsScala took 0.545814ms
[debug] [Loading] Scanning directory /home/sr7/LearnBigData/mlLib_Summarizer/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/sr7/LearnBigData/mlLib_Summarizer/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 38.771041 ms
[debug]               Load.resolveProject(mllib_summarizer-build) took 65.452132ms
[debug]             Load.loadTransitive: finalizeProject(Project(id mllib_summarizer-build, base: /home/sr7/LearnBigData/mlLib_Summarizer/project, plugins: List(<none>))) took 132.210353ms
[debug] [Loading] Done in /home/sr7/LearnBigData/mlLib_Summarizer/project, returning: (mllib_summarizer-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 166.402597ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.1102ms
[debug]         Load.loadUnit(file:/home/sr7/LearnBigData/mlLib_Summarizer/project/, ...) took 285.336514ms
[debug]       Load.apply: load took 679.369892ms
[debug]       Load.apply: resolveProjects took 9.780148ms
[debug]       Load.apply: finalTransforms took 79.000333ms
[debug]       Load.apply: config.delegates took 9.478108ms
[debug]       Load.apply: Def.make(settings)... took 630.941804ms
[debug]       Load.apply: structureIndex took 156.46189ms
[debug]       Load.apply: mkStreams took 2.199689ms
[info] loading project definition from /home/sr7/LearnBigData/mlLib_Summarizer/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2862.841697ms
[debug]     Load.loadUnit: defsScala took 0.00806ms
[debug] [Loading] Scanning directory /home/sr7/LearnBigData/mlLib_Summarizer
[debug]       Load.loadUnit: mkEval took 8.449555ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.878556 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.352967ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/sr7/LearnBigData/mlLib_Summarizer, plugins: List(<none>))) took 9.257626ms
[debug] [Loading] Done in /home/sr7/LearnBigData/mlLib_Summarizer, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3285.407596ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.734973ms
[debug]   Load.loadUnit(file:/home/sr7/LearnBigData/mlLib_Summarizer/, ...) took 6154.815519ms
[debug] Load.apply: load took 6184.487099ms
[debug] Load.apply: resolveProjects took 0.151445ms
[debug] Load.apply: finalTransforms took 18.272026ms
[debug] Load.apply: config.delegates took 0.544952ms
[debug] Load.apply: Def.make(settings)... took 188.662974ms
[debug] Load.apply: structureIndex took 55.976146ms
[debug] Load.apply: mkStreams took 0.004393ms
[info] set current project to mlLib_Summarizer (in build file:/home/sr7/LearnBigData/mlLib_Summarizer/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] 
[info] Here are some highlights of sbt 1.10.0:
[info]   - SIP-51 support for Scala 2.13 evolution
[info]   - Various Zinc fixes
[info]   - ConsistentAnalysisFormat: new Zinc Analysis serialization
[info]   - CommandProgress API
[info] See https://eed3si9n.com/sbt-1.10.0 for full release notes.
[info] Hide the banner for this release by running `skipBanner`.
[info] sbt server started at local:///home/sr7/.sbt/1.0/server/c8f22dd4cdb194f20b03/sock
[debug] Writing bsp connection file
[info] started sbt server
